version: '3.8'

services:
  api:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: sh -c "/start.sh && uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  image_processor:
    build: .
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: python -m app.workers.image_processor

  policy_creator:
    build: .
    env_file:
      - .env
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: python -m app.workers.policy_creator

  db:
    image: postgres:14
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=acg_xm
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  rabbitmq_data: 